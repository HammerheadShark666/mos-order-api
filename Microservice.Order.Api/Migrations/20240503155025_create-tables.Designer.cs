// <auto-generated />
using System;
using Microservice.Order.Api.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Microservice.Order.Api.Migrations
{
    [DbContext(typeof(OrderDbContext))]
    [Migration("20240503155025_create-tables")]
    partial class createtables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.HasSequence<int>("OrderNumberCounter");

            modelBuilder.Entity("Microservice.Order.Api.Domain.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CustomerAddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR OrderNumberCounter");

                    b.Property<int>("OrderStatusId")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(19, 2)");

                    b.HasKey("Id");

                    b.HasIndex("OrderStatusId");

                    b.ToTable("MSOS_Order");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d3ca8ea8-97d6-41ce-937f-e2d9a905d61e"),
                            Created = new DateTime(2024, 5, 3, 16, 50, 24, 518, DateTimeKind.Local).AddTicks(726),
                            CustomerAddressId = new Guid("9a11e147-f416-4063-a5ed-94bae3bce423"),
                            CustomerId = new Guid("bb472ce8-edfd-4b90-8f11-40f3eeed778b"),
                            LastUpdated = new DateTime(2024, 5, 3, 16, 50, 24, 518, DateTimeKind.Local).AddTicks(770),
                            OrderNumber = 1,
                            OrderStatusId = 1,
                            Total = 25.99m
                        },
                        new
                        {
                            Id = new Guid("7b5673fa-166e-417e-a0bf-d2c7d72b6ab3"),
                            Created = new DateTime(2024, 5, 3, 16, 50, 24, 518, DateTimeKind.Local).AddTicks(781),
                            CustomerAddressId = new Guid("eeed04b3-538b-4677-887b-77f0803958a6"),
                            CustomerId = new Guid("6c84d0a3-0c0c-435f-9ae0-4de09247ee15"),
                            LastUpdated = new DateTime(2024, 5, 3, 16, 50, 24, 518, DateTimeKind.Local).AddTicks(783),
                            OrderNumber = 2,
                            OrderStatusId = 2,
                            Total = 19.98m
                        },
                        new
                        {
                            Id = new Guid("6f3e950c-5502-491f-911d-02e112318705"),
                            Created = new DateTime(2024, 5, 3, 16, 50, 24, 518, DateTimeKind.Local).AddTicks(838),
                            CustomerAddressId = new Guid("2bc333d2-8f8c-46bd-b454-b0735b662bea"),
                            CustomerId = new Guid("82c5ba18-d049-49a0-83aa-a2a9840b08ad"),
                            LastUpdated = new DateTime(2024, 5, 3, 16, 50, 24, 518, DateTimeKind.Local).AddTicks(839),
                            OrderNumber = 3,
                            OrderStatusId = 3,
                            Total = 2.50m
                        },
                        new
                        {
                            Id = new Guid("e7cc2320-6443-46bd-93f4-a2ae7b437287"),
                            Created = new DateTime(2024, 5, 3, 16, 50, 24, 518, DateTimeKind.Local).AddTicks(843),
                            CustomerAddressId = new Guid("9a11e147-f416-4063-a5ed-94bae3bce423"),
                            CustomerId = new Guid("bb472ce8-edfd-4b90-8f11-40f3eeed778b"),
                            LastUpdated = new DateTime(2024, 5, 3, 16, 50, 24, 518, DateTimeKind.Local).AddTicks(845),
                            OrderNumber = 4,
                            OrderStatusId = 4,
                            Total = 51.47m
                        },
                        new
                        {
                            Id = new Guid("30cfccfe-038c-4f20-a306-f0a2a9df0829"),
                            Created = new DateTime(2024, 5, 3, 16, 50, 24, 518, DateTimeKind.Local).AddTicks(853),
                            CustomerAddressId = new Guid("97d31501-4008-4b1a-9aeb-71d4cea31059"),
                            CustomerId = new Guid("39c2080b-18ca-4974-8937-f9d758b89bac"),
                            LastUpdated = new DateTime(2024, 5, 3, 16, 50, 24, 518, DateTimeKind.Local).AddTicks(854),
                            OrderNumber = 5,
                            OrderStatusId = 1,
                            Total = 24.98m
                        },
                        new
                        {
                            Id = new Guid("34335ca4-ebcd-4a2e-b54a-af9feb09535d"),
                            Created = new DateTime(2024, 5, 3, 16, 50, 24, 518, DateTimeKind.Local).AddTicks(860),
                            CustomerAddressId = new Guid("14e016ec-3935-431f-88a3-17b55ad99198"),
                            CustomerId = new Guid("453b920e-e8b0-4c5e-bd44-77c4cd75771d"),
                            LastUpdated = new DateTime(2024, 5, 3, 16, 50, 24, 518, DateTimeKind.Local).AddTicks(862),
                            OrderNumber = 6,
                            OrderStatusId = 2,
                            Total = 19.98m
                        },
                        new
                        {
                            Id = new Guid("54d54c4e-d774-4b01-af87-0d0b94510767"),
                            Created = new DateTime(2024, 5, 3, 16, 50, 24, 518, DateTimeKind.Local).AddTicks(866),
                            CustomerAddressId = new Guid("870062c2-09c1-4fd4-8066-7d149b5cc86c"),
                            CustomerId = new Guid("4de2c877-5cdb-4153-9e49-4a8f77d910e9"),
                            LastUpdated = new DateTime(2024, 5, 3, 16, 50, 24, 518, DateTimeKind.Local).AddTicks(867),
                            OrderNumber = 7,
                            OrderStatusId = 5,
                            Total = 28.78m
                        },
                        new
                        {
                            Id = new Guid("07a2ab81-7651-484f-945e-08074e7662bc"),
                            Created = new DateTime(2024, 5, 3, 16, 50, 24, 518, DateTimeKind.Local).AddTicks(871),
                            CustomerAddressId = new Guid("0a1cbffa-967f-4338-a2c1-e80238d61a16"),
                            CustomerId = new Guid("160429ab-7d0b-464e-8042-cec3218c014c"),
                            LastUpdated = new DateTime(2024, 5, 3, 16, 50, 24, 518, DateTimeKind.Local).AddTicks(873),
                            OrderNumber = 8,
                            OrderStatusId = 5,
                            Total = 12.99m
                        },
                        new
                        {
                            Id = new Guid("9e93a116-a143-4865-8a84-b000d0df09c7"),
                            Created = new DateTime(2024, 5, 3, 16, 50, 24, 518, DateTimeKind.Local).AddTicks(877),
                            CustomerAddressId = new Guid("25ed9fe9-4c1d-414e-b6b3-bcf725dce00b"),
                            CustomerId = new Guid("3ea4739c-a8dc-4c59-b3ba-c6104024c24e"),
                            LastUpdated = new DateTime(2024, 5, 3, 16, 50, 24, 518, DateTimeKind.Local).AddTicks(878),
                            OrderNumber = 9,
                            OrderStatusId = 5,
                            Total = 59.96m
                        },
                        new
                        {
                            Id = new Guid("69e3878e-8293-4e81-8791-31328e2a3907"),
                            Created = new DateTime(2024, 5, 3, 16, 50, 24, 518, DateTimeKind.Local).AddTicks(883),
                            CustomerAddressId = new Guid("2bc333d2-8f8c-46bd-b454-b0735b662bea"),
                            CustomerId = new Guid("82c5ba18-d049-49a0-83aa-a2a9840b08ad"),
                            LastUpdated = new DateTime(2024, 5, 3, 16, 50, 24, 518, DateTimeKind.Local).AddTicks(884),
                            OrderNumber = 10,
                            OrderStatusId = 5,
                            Total = 10.00m
                        });
                });

            modelBuilder.Entity("Microservice.Order.Api.Domain.OrderItem", b =>
                {
                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("ProductTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitPrice")
                        .IsRequired()
                        .HasColumnType("decimal(19, 2)");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("MSOS_OrderItem");

                    b.HasData(
                        new
                        {
                            OrderId = new Guid("d3ca8ea8-97d6-41ce-937f-e2d9a905d61e"),
                            ProductId = new Guid("29a75938-ce2d-473b-b7fe-2903fe97fd6e"),
                            Name = "Infinity Kings",
                            ProductTypeId = 1,
                            Quantity = 1,
                            UnitPrice = 9.99m
                        },
                        new
                        {
                            OrderId = new Guid("d3ca8ea8-97d6-41ce-937f-e2d9a905d61e"),
                            ProductId = new Guid("07c06c3f-0897-44b6-ae05-a70540e73a12"),
                            Name = "Infinity Son",
                            ProductTypeId = 1,
                            Quantity = 1,
                            UnitPrice = 7.50m
                        },
                        new
                        {
                            OrderId = new Guid("d3ca8ea8-97d6-41ce-937f-e2d9a905d61e"),
                            ProductId = new Guid("6131ce7e-fb11-4608-a3d3-f01caee2c465"),
                            Name = "Infinity Reaper",
                            ProductTypeId = 1,
                            Quantity = 1,
                            UnitPrice = 8.50m
                        },
                        new
                        {
                            OrderId = new Guid("7b5673fa-166e-417e-a0bf-d2c7d72b6ab3"),
                            ProductId = new Guid("37544155-da95-49e8-b7fe-3c937eb1de98"),
                            Name = "Wild Love",
                            ProductTypeId = 1,
                            Quantity = 2,
                            UnitPrice = 9.99m
                        },
                        new
                        {
                            OrderId = new Guid("6f3e950c-5502-491f-911d-02e112318705"),
                            ProductId = new Guid("f3fcab1f-1c11-47f5-9e11-7868a88408e6"),
                            Name = "Thunderhead",
                            ProductTypeId = 1,
                            Quantity = 1,
                            UnitPrice = 2.50m
                        },
                        new
                        {
                            OrderId = new Guid("e7cc2320-6443-46bd-93f4-a2ae7b437287"),
                            ProductId = new Guid("23608dce-2142-4d2b-b909-948316b5efaf"),
                            Name = "Scythe",
                            ProductTypeId = 1,
                            Quantity = 1,
                            UnitPrice = 3.50m
                        },
                        new
                        {
                            OrderId = new Guid("e7cc2320-6443-46bd-93f4-a2ae7b437287"),
                            ProductId = new Guid("ecf65c56-5670-473b-9f20-fb0b191c2f0f"),
                            Name = "Saltblood",
                            ProductTypeId = 1,
                            Quantity = 3,
                            UnitPrice = 15.99m
                        },
                        new
                        {
                            OrderId = new Guid("30cfccfe-038c-4f20-a306-f0a2a9df0829"),
                            ProductId = new Guid("29a75938-ce2d-473b-b7fe-2903fe97fd6e"),
                            Name = "Infinity Kings",
                            ProductTypeId = 1,
                            Quantity = 2,
                            UnitPrice = 9.99m
                        },
                        new
                        {
                            OrderId = new Guid("30cfccfe-038c-4f20-a306-f0a2a9df0829"),
                            ProductId = new Guid("07c06c3f-0897-44b6-ae05-a70540e73a12"),
                            Name = "Infinity Son",
                            ProductTypeId = 1,
                            Quantity = 2,
                            UnitPrice = 7.50m
                        },
                        new
                        {
                            OrderId = new Guid("34335ca4-ebcd-4a2e-b54a-af9feb09535d"),
                            ProductId = new Guid("37544155-da95-49e8-b7fe-3c937eb1de98"),
                            Name = "Wild Love",
                            ProductTypeId = 1,
                            Quantity = 2,
                            UnitPrice = 9.99m
                        },
                        new
                        {
                            OrderId = new Guid("54d54c4e-d774-4b01-af87-0d0b94510767"),
                            ProductId = new Guid("6b85f863-7991-4f93-bf86-8c756fdeac87"),
                            Name = "Fall of Civilizations: Stories of Greatness and Decline",
                            ProductTypeId = 1,
                            Quantity = 2,
                            UnitPrice = 14.39m
                        },
                        new
                        {
                            OrderId = new Guid("07a2ab81-7651-484f-945e-08074e7662bc"),
                            ProductId = new Guid("285c81bc-f257-4ffb-b6ce-7ab5fa9e5c81"),
                            Name = "Skandar and the Chaos Trials",
                            ProductTypeId = 1,
                            Quantity = 1,
                            UnitPrice = 12.99m
                        },
                        new
                        {
                            OrderId = new Guid("9e93a116-a143-4865-8a84-b000d0df09c7"),
                            ProductId = new Guid("01f54aa7-c51a-4b92-a72b-68e0965bf246"),
                            Name = "Funny Story",
                            ProductTypeId = 1,
                            Quantity = 1,
                            UnitPrice = 11.99m
                        },
                        new
                        {
                            OrderId = new Guid("9e93a116-a143-4865-8a84-b000d0df09c7"),
                            ProductId = new Guid("ecf65c56-5670-473b-9f20-fb0b191c2f0f"),
                            Name = "Saltblood",
                            ProductTypeId = 1,
                            Quantity = 3,
                            UnitPrice = 15.99m
                        },
                        new
                        {
                            OrderId = new Guid("69e3878e-8293-4e81-8791-31328e2a3907"),
                            ProductId = new Guid("07c06c3f-0897-44b6-ae05-a70540e73a12"),
                            Name = "Infinity Son",
                            ProductTypeId = 1,
                            Quantity = 1,
                            UnitPrice = 7.50m
                        },
                        new
                        {
                            OrderId = new Guid("69e3878e-8293-4e81-8791-31328e2a3907"),
                            ProductId = new Guid("f3fcab1f-1c11-47f5-9e11-7868a88408e6"),
                            Name = "Thunderhead",
                            ProductTypeId = 1,
                            Quantity = 1,
                            UnitPrice = 2.50m
                        });
                });

            modelBuilder.Entity("Microservice.Order.Api.Domain.OrderStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.HasKey("Id");

                    b.ToTable("MSOS_OrderStatus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Status = "Created"
                        },
                        new
                        {
                            Id = 2,
                            Status = "Paid"
                        },
                        new
                        {
                            Id = 3,
                            Status = "Dispatched"
                        },
                        new
                        {
                            Id = 4,
                            Status = "Recieved"
                        },
                        new
                        {
                            Id = 5,
                            Status = "Completed"
                        });
                });

            modelBuilder.Entity("Microservice.Order.Api.Domain.ProductType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.HasKey("Id");

                    b.ToTable("MSOS_ProductType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Book"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Music"
                        });
                });

            modelBuilder.Entity("Microservice.Order.Api.Domain.Order", b =>
                {
                    b.HasOne("Microservice.Order.Api.Domain.OrderStatus", "OrderStatus")
                        .WithMany()
                        .HasForeignKey("OrderStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderStatus");
                });

            modelBuilder.Entity("Microservice.Order.Api.Domain.OrderItem", b =>
                {
                    b.HasOne("Microservice.Order.Api.Domain.Order", null)
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microservice.Order.Api.Domain.ProductType", "ProductType")
                        .WithMany()
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductType");
                });

            modelBuilder.Entity("Microservice.Order.Api.Domain.Order", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
